syntax = "proto3";

package proto;

service Replica {
  rpc AppendEntry(AppendEntryReq) returns (AppendEntryResp) {}
  rpc HeartBeat(HeartBeatReq) returns (HeartBeatResp) {}
  rpc Vote(VoteReq) returns (VoteResp) {}
}

message VoteReq {
  int64 id = 1;
  int64 lastIndex = 2;
  int64 term = 3;
}

message VoteResp {}

message HeartBeatReq {
  int64 id = 1;
  int64 lastCommit = 2;
  int64 term = 3;
}

message HeartBeatResp {}

message Entry {
  string command = 1;
  int64 index = 2;
  string key = 3;
  int64 term = 4;
  string value = 5;
}

message AppendEntryReq {
  int64 id = 1;
  int64 lastCommit = 2;
  int64 preIndex = 3;
  int64 preTerm = 4;
  int64 term = 5;
  repeated Entry entries = 6;
}

message AppendEntryResp {
  bool ok = 1;
}

service Raft {
  rpc Get(GetReq) returns (GetResp) {}
  rpc Put(PutReq) returns (PutResp) {}
}

message PutReq {
  string key = 1;
  string value = 2;
}

message PutResp {}

message GetReq {
  string key = 1;
}

message GetResp {
  string value = 1;
}
