// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/raft.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VoteReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	LastIndex            int64    `protobuf:"varint,2,opt,name=lastIndex" json:"lastIndex,omitempty"`
	Term                 int64    `protobuf:"varint,3,opt,name=term" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteReq) Reset()         { *m = VoteReq{} }
func (m *VoteReq) String() string { return proto.CompactTextString(m) }
func (*VoteReq) ProtoMessage()    {}
func (*VoteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{0}
}
func (m *VoteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteReq.Unmarshal(m, b)
}
func (m *VoteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteReq.Marshal(b, m, deterministic)
}
func (dst *VoteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteReq.Merge(dst, src)
}
func (m *VoteReq) XXX_Size() int {
	return xxx_messageInfo_VoteReq.Size(m)
}
func (m *VoteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteReq.DiscardUnknown(m)
}

var xxx_messageInfo_VoteReq proto.InternalMessageInfo

func (m *VoteReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VoteReq) GetLastIndex() int64 {
	if m != nil {
		return m.LastIndex
	}
	return 0
}

func (m *VoteReq) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

type VoteResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteResp) Reset()         { *m = VoteResp{} }
func (m *VoteResp) String() string { return proto.CompactTextString(m) }
func (*VoteResp) ProtoMessage()    {}
func (*VoteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{1}
}
func (m *VoteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteResp.Unmarshal(m, b)
}
func (m *VoteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteResp.Marshal(b, m, deterministic)
}
func (dst *VoteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteResp.Merge(dst, src)
}
func (m *VoteResp) XXX_Size() int {
	return xxx_messageInfo_VoteResp.Size(m)
}
func (m *VoteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteResp.DiscardUnknown(m)
}

var xxx_messageInfo_VoteResp proto.InternalMessageInfo

type HeartBeatReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	LastCommit           int64    `protobuf:"varint,2,opt,name=lastCommit" json:"lastCommit,omitempty"`
	Term                 int64    `protobuf:"varint,3,opt,name=term" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartBeatReq) Reset()         { *m = HeartBeatReq{} }
func (m *HeartBeatReq) String() string { return proto.CompactTextString(m) }
func (*HeartBeatReq) ProtoMessage()    {}
func (*HeartBeatReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{2}
}
func (m *HeartBeatReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartBeatReq.Unmarshal(m, b)
}
func (m *HeartBeatReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartBeatReq.Marshal(b, m, deterministic)
}
func (dst *HeartBeatReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartBeatReq.Merge(dst, src)
}
func (m *HeartBeatReq) XXX_Size() int {
	return xxx_messageInfo_HeartBeatReq.Size(m)
}
func (m *HeartBeatReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartBeatReq.DiscardUnknown(m)
}

var xxx_messageInfo_HeartBeatReq proto.InternalMessageInfo

func (m *HeartBeatReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HeartBeatReq) GetLastCommit() int64 {
	if m != nil {
		return m.LastCommit
	}
	return 0
}

func (m *HeartBeatReq) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

type HeartBeatResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartBeatResp) Reset()         { *m = HeartBeatResp{} }
func (m *HeartBeatResp) String() string { return proto.CompactTextString(m) }
func (*HeartBeatResp) ProtoMessage()    {}
func (*HeartBeatResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{3}
}
func (m *HeartBeatResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartBeatResp.Unmarshal(m, b)
}
func (m *HeartBeatResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartBeatResp.Marshal(b, m, deterministic)
}
func (dst *HeartBeatResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartBeatResp.Merge(dst, src)
}
func (m *HeartBeatResp) XXX_Size() int {
	return xxx_messageInfo_HeartBeatResp.Size(m)
}
func (m *HeartBeatResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartBeatResp.DiscardUnknown(m)
}

var xxx_messageInfo_HeartBeatResp proto.InternalMessageInfo

type Entry struct {
	Command              string   `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Term                 int64    `protobuf:"varint,4,opt,name=term" json:"term,omitempty"`
	Value                string   `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{4}
}
func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (dst *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(dst, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Entry) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Entry) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Entry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AppendEntryReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	LastCommit           int64    `protobuf:"varint,2,opt,name=lastCommit" json:"lastCommit,omitempty"`
	PreIndex             int64    `protobuf:"varint,3,opt,name=preIndex" json:"preIndex,omitempty"`
	PreTerm              int64    `protobuf:"varint,4,opt,name=preTerm" json:"preTerm,omitempty"`
	Term                 int64    `protobuf:"varint,5,opt,name=term" json:"term,omitempty"`
	Entries              []*Entry `protobuf:"bytes,6,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntryReq) Reset()         { *m = AppendEntryReq{} }
func (m *AppendEntryReq) String() string { return proto.CompactTextString(m) }
func (*AppendEntryReq) ProtoMessage()    {}
func (*AppendEntryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{5}
}
func (m *AppendEntryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntryReq.Unmarshal(m, b)
}
func (m *AppendEntryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntryReq.Marshal(b, m, deterministic)
}
func (dst *AppendEntryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntryReq.Merge(dst, src)
}
func (m *AppendEntryReq) XXX_Size() int {
	return xxx_messageInfo_AppendEntryReq.Size(m)
}
func (m *AppendEntryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntryReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntryReq proto.InternalMessageInfo

func (m *AppendEntryReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AppendEntryReq) GetLastCommit() int64 {
	if m != nil {
		return m.LastCommit
	}
	return 0
}

func (m *AppendEntryReq) GetPreIndex() int64 {
	if m != nil {
		return m.PreIndex
	}
	return 0
}

func (m *AppendEntryReq) GetPreTerm() int64 {
	if m != nil {
		return m.PreTerm
	}
	return 0
}

func (m *AppendEntryReq) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntryReq) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AppendEntryResp struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntryResp) Reset()         { *m = AppendEntryResp{} }
func (m *AppendEntryResp) String() string { return proto.CompactTextString(m) }
func (*AppendEntryResp) ProtoMessage()    {}
func (*AppendEntryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{6}
}
func (m *AppendEntryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntryResp.Unmarshal(m, b)
}
func (m *AppendEntryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntryResp.Marshal(b, m, deterministic)
}
func (dst *AppendEntryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntryResp.Merge(dst, src)
}
func (m *AppendEntryResp) XXX_Size() int {
	return xxx_messageInfo_AppendEntryResp.Size(m)
}
func (m *AppendEntryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntryResp.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntryResp proto.InternalMessageInfo

func (m *AppendEntryResp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type PutReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutReq) Reset()         { *m = PutReq{} }
func (m *PutReq) String() string { return proto.CompactTextString(m) }
func (*PutReq) ProtoMessage()    {}
func (*PutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{7}
}
func (m *PutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutReq.Unmarshal(m, b)
}
func (m *PutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutReq.Marshal(b, m, deterministic)
}
func (dst *PutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutReq.Merge(dst, src)
}
func (m *PutReq) XXX_Size() int {
	return xxx_messageInfo_PutReq.Size(m)
}
func (m *PutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PutReq.DiscardUnknown(m)
}

var xxx_messageInfo_PutReq proto.InternalMessageInfo

func (m *PutReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PutReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type PutResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResp) Reset()         { *m = PutResp{} }
func (m *PutResp) String() string { return proto.CompactTextString(m) }
func (*PutResp) ProtoMessage()    {}
func (*PutResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{8}
}
func (m *PutResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResp.Unmarshal(m, b)
}
func (m *PutResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResp.Marshal(b, m, deterministic)
}
func (dst *PutResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResp.Merge(dst, src)
}
func (m *PutResp) XXX_Size() int {
	return xxx_messageInfo_PutResp.Size(m)
}
func (m *PutResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResp.DiscardUnknown(m)
}

var xxx_messageInfo_PutResp proto.InternalMessageInfo

type GetReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReq) Reset()         { *m = GetReq{} }
func (m *GetReq) String() string { return proto.CompactTextString(m) }
func (*GetReq) ProtoMessage()    {}
func (*GetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{9}
}
func (m *GetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReq.Unmarshal(m, b)
}
func (m *GetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReq.Marshal(b, m, deterministic)
}
func (dst *GetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReq.Merge(dst, src)
}
func (m *GetReq) XXX_Size() int {
	return xxx_messageInfo_GetReq.Size(m)
}
func (m *GetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetReq proto.InternalMessageInfo

func (m *GetReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetResp struct {
	Value                string   `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResp) Reset()         { *m = GetResp{} }
func (m *GetResp) String() string { return proto.CompactTextString(m) }
func (*GetResp) ProtoMessage()    {}
func (*GetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_01eb90f8b87d7003, []int{10}
}
func (m *GetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResp.Unmarshal(m, b)
}
func (m *GetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResp.Marshal(b, m, deterministic)
}
func (dst *GetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResp.Merge(dst, src)
}
func (m *GetResp) XXX_Size() int {
	return xxx_messageInfo_GetResp.Size(m)
}
func (m *GetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetResp proto.InternalMessageInfo

func (m *GetResp) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*VoteReq)(nil), "proto.VoteReq")
	proto.RegisterType((*VoteResp)(nil), "proto.VoteResp")
	proto.RegisterType((*HeartBeatReq)(nil), "proto.HeartBeatReq")
	proto.RegisterType((*HeartBeatResp)(nil), "proto.HeartBeatResp")
	proto.RegisterType((*Entry)(nil), "proto.Entry")
	proto.RegisterType((*AppendEntryReq)(nil), "proto.AppendEntryReq")
	proto.RegisterType((*AppendEntryResp)(nil), "proto.AppendEntryResp")
	proto.RegisterType((*PutReq)(nil), "proto.PutReq")
	proto.RegisterType((*PutResp)(nil), "proto.PutResp")
	proto.RegisterType((*GetReq)(nil), "proto.GetReq")
	proto.RegisterType((*GetResp)(nil), "proto.GetResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Replica service

type ReplicaClient interface {
	AppendEntry(ctx context.Context, in *AppendEntryReq, opts ...grpc.CallOption) (*AppendEntryResp, error)
	HeartBeat(ctx context.Context, in *HeartBeatReq, opts ...grpc.CallOption) (*HeartBeatResp, error)
	Vote(ctx context.Context, in *VoteReq, opts ...grpc.CallOption) (*VoteResp, error)
}

type replicaClient struct {
	cc *grpc.ClientConn
}

func NewReplicaClient(cc *grpc.ClientConn) ReplicaClient {
	return &replicaClient{cc}
}

func (c *replicaClient) AppendEntry(ctx context.Context, in *AppendEntryReq, opts ...grpc.CallOption) (*AppendEntryResp, error) {
	out := new(AppendEntryResp)
	err := grpc.Invoke(ctx, "/proto.Replica/AppendEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicaClient) HeartBeat(ctx context.Context, in *HeartBeatReq, opts ...grpc.CallOption) (*HeartBeatResp, error) {
	out := new(HeartBeatResp)
	err := grpc.Invoke(ctx, "/proto.Replica/HeartBeat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicaClient) Vote(ctx context.Context, in *VoteReq, opts ...grpc.CallOption) (*VoteResp, error) {
	out := new(VoteResp)
	err := grpc.Invoke(ctx, "/proto.Replica/Vote", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Replica service

type ReplicaServer interface {
	AppendEntry(context.Context, *AppendEntryReq) (*AppendEntryResp, error)
	HeartBeat(context.Context, *HeartBeatReq) (*HeartBeatResp, error)
	Vote(context.Context, *VoteReq) (*VoteResp, error)
}

func RegisterReplicaServer(s *grpc.Server, srv ReplicaServer) {
	s.RegisterService(&_Replica_serviceDesc, srv)
}

func _Replica_AppendEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicaServer).AppendEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Replica/AppendEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicaServer).AppendEntry(ctx, req.(*AppendEntryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replica_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartBeatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicaServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Replica/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicaServer).HeartBeat(ctx, req.(*HeartBeatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replica_Vote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicaServer).Vote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Replica/Vote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicaServer).Vote(ctx, req.(*VoteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Replica_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Replica",
	HandlerType: (*ReplicaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntry",
			Handler:    _Replica_AppendEntry_Handler,
		},
		{
			MethodName: "HeartBeat",
			Handler:    _Replica_HeartBeat_Handler,
		},
		{
			MethodName: "Vote",
			Handler:    _Replica_Vote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/raft.proto",
}

// Client API for Raft service

type RaftClient interface {
	Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error)
	Put(ctx context.Context, in *PutReq, opts ...grpc.CallOption) (*PutResp, error)
}

type raftClient struct {
	cc *grpc.ClientConn
}

func NewRaftClient(cc *grpc.ClientConn) RaftClient {
	return &raftClient{cc}
}

func (c *raftClient) Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error) {
	out := new(GetResp)
	err := grpc.Invoke(ctx, "/proto.Raft/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) Put(ctx context.Context, in *PutReq, opts ...grpc.CallOption) (*PutResp, error) {
	out := new(PutResp)
	err := grpc.Invoke(ctx, "/proto.Raft/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Raft service

type RaftServer interface {
	Get(context.Context, *GetReq) (*GetResp, error)
	Put(context.Context, *PutReq) (*PutResp, error)
}

func RegisterRaftServer(s *grpc.Server, srv RaftServer) {
	s.RegisterService(&_Raft_serviceDesc, srv)
}

func _Raft_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Raft/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).Get(ctx, req.(*GetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Raft/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).Put(ctx, req.(*PutReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Raft_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Raft",
	HandlerType: (*RaftServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Raft_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Raft_Put_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/raft.proto",
}

func init() { proto.RegisterFile("proto/raft.proto", fileDescriptor_raft_01eb90f8b87d7003) }

var fileDescriptor_raft_01eb90f8b87d7003 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x6d, 0xbe, 0x37, 0xd3, 0x36, 0x5b, 0x99, 0x82, 0xa2, 0x08, 0x41, 0xf1, 0x61, 0x55, 0x2e,
	0x05, 0x2d, 0x17, 0x4e, 0x48, 0x80, 0x50, 0x41, 0x5c, 0x2a, 0x0b, 0xf5, 0x6e, 0x9a, 0x59, 0x29,
	0xda, 0x4d, 0x62, 0x6c, 0x2f, 0x62, 0xff, 0x14, 0x07, 0x7e, 0x21, 0x8a, 0x9d, 0x0f, 0xaf, 0xc8,
	0x89, 0x53, 0xfc, 0xe6, 0xe3, 0xcd, 0x9b, 0x67, 0x07, 0x2e, 0x84, 0x6c, 0x75, 0xfb, 0x4a, 0xf2,
	0x8d, 0xbe, 0x31, 0x47, 0x12, 0x99, 0x0f, 0xfd, 0x0a, 0xc9, 0x7d, 0xab, 0x91, 0xe1, 0x0f, 0x92,
	0x81, 0x5f, 0x95, 0xb9, 0x77, 0xe5, 0x5d, 0x07, 0xcc, 0xaf, 0x4a, 0xf2, 0x14, 0xd2, 0x1d, 0x57,
	0xfa, 0x4b, 0x53, 0xe2, 0xaf, 0xdc, 0x37, 0xe1, 0x29, 0x40, 0x08, 0x84, 0x1a, 0x65, 0x9d, 0x07,
	0x26, 0x61, 0xce, 0x14, 0x60, 0x61, 0xc9, 0x94, 0xa0, 0x0c, 0xce, 0x3e, 0x23, 0x97, 0xfa, 0x03,
	0x72, 0x3d, 0xc7, 0xfe, 0x0c, 0xa0, 0x23, 0xfb, 0xd8, 0xd6, 0x75, 0xa5, 0x7b, 0x7a, 0x27, 0x32,
	0xcb, 0xbf, 0x84, 0x73, 0x87, 0x53, 0x09, 0xaa, 0x20, 0xfa, 0xd4, 0x68, 0x79, 0x20, 0x39, 0x24,
	0x0f, 0x6d, 0x5d, 0xf3, 0xc6, 0x8e, 0x48, 0xd9, 0x00, 0xc9, 0x25, 0x44, 0x95, 0xb3, 0x81, 0x05,
	0xe4, 0x02, 0x82, 0x2d, 0x1e, 0x0c, 0x79, 0xca, 0xba, 0xe3, 0x38, 0x2f, 0x9c, 0xe6, 0x75, 0xbd,
	0x3f, 0xf9, 0x6e, 0x8f, 0x79, 0x64, 0xea, 0x2c, 0xa0, 0x7f, 0x3c, 0xc8, 0xde, 0x0b, 0x81, 0x4d,
	0x69, 0x66, 0xff, 0xcf, 0x72, 0x05, 0x2c, 0x84, 0x44, 0xeb, 0xac, 0x5d, 0x70, 0xc4, 0xdd, 0x2a,
	0x42, 0xe2, 0xb7, 0x49, 0xcb, 0x00, 0x47, 0x89, 0x91, 0x23, 0x71, 0x05, 0x09, 0x36, 0x5a, 0x56,
	0xa8, 0xf2, 0xf8, 0x2a, 0xb8, 0x3e, 0x5d, 0x9f, 0xd9, 0xfb, 0xbd, 0xb1, 0xda, 0x86, 0x24, 0x7d,
	0x01, 0xcb, 0x23, 0xcd, 0x4a, 0x74, 0xa2, 0xdb, 0xad, 0x11, 0xbd, 0x60, 0x7e, 0xbb, 0xa5, 0xaf,
	0x21, 0xbe, 0xdb, 0x9b, 0xbb, 0xea, 0xdd, 0xf1, 0x26, 0x77, 0x46, 0x27, 0x7c, 0xd7, 0x89, 0x14,
	0x12, 0xd3, 0xa1, 0x04, 0x2d, 0x20, 0xbe, 0xc5, 0xf9, 0x66, 0xfa, 0x1c, 0x12, 0x93, 0x53, 0x62,
	0xe2, 0xf1, 0x1c, 0x9e, 0xf5, 0x6f, 0x0f, 0x12, 0x86, 0x62, 0x57, 0x3d, 0x70, 0xf2, 0x0e, 0x4e,
	0x1d, 0xa1, 0xe4, 0x71, 0xbf, 0xce, 0xb1, 0xe1, 0xc5, 0x93, 0xb9, 0xb0, 0x12, 0xf4, 0x84, 0xbc,
	0x85, 0x74, 0x7c, 0x23, 0xe4, 0x51, 0x5f, 0xe6, 0xbe, 0xc4, 0xe2, 0xf2, 0xdf, 0xa0, 0xe9, 0x7c,
	0x09, 0x61, 0xf7, 0x7a, 0x49, 0xd6, 0xe7, 0xfb, 0xff, 0xa2, 0x58, 0x1e, 0xe1, 0xae, 0x74, 0x7d,
	0x0f, 0x21, 0xe3, 0x1b, 0x4d, 0x56, 0x10, 0xdc, 0xa2, 0x26, 0xe7, 0x7d, 0x85, 0x75, 0xa0, 0xc8,
	0x5c, 0x68, 0xa8, 0x57, 0x10, 0xdc, 0xed, 0xa7, 0x3a, 0x6b, 0xf3, 0x58, 0x37, 0x78, 0x78, 0xf2,
	0x3d, 0x36, 0x81, 0x37, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xde, 0x42, 0x93, 0xaf, 0x03,
	0x00, 0x00,
}
